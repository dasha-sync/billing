services:
  billing:
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: docker
    env_file: .env
    networks:
      - spay-net

  usage:
    image: dashasync/usage-worker:latest   # build: context: ./../usage-worker
    ports:
      - "8081:8080"
    depends_on:
      kafka:
        condition: service_healthy
    env_file: .env
    networks:
      - spay-net

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: spay
    ports:
      - "5433:5432"
    networks:
      - spay-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - spay-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 5s
      retries: 10
    networks:
      - spay-net

  nginx:
    image: nginx:latest
    ports:
      - "8085:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - collector1
      - collector2
      - collector3
    networks:
      - spay-net

  collector1:
    image: dashasync/collector:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - spay-net
    depends_on:
      - kafka

  collector2:
    image: dashasync/collector:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - spay-net
    depends_on:
      - kafka

  collector3:
    image: dashasync/collector:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - spay-net
    depends_on:
      - kafka

networks:
  spay-net:
    driver: bridge
